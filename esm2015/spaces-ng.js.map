{
  "version": 3,
  "file": "spaces-ng.js",
  "sources": [
    "ng://spaces-ng/out/SpacesModule.ts",
    "ng://spaces-ng/out/lib/components/spaces-landing-page/spaces-landing-page.component.ts",
    "ng://spaces-ng/out/lib/spaces_utilities.service.ts",
    "ng://spaces-ng/out/lib/spaces_storage.service.ts",
    "ng://spaces-ng/out/lib/spaces_request.service.ts",
    "ng://spaces-ng/out/lib/spaces_params.resolve.ts",
    "ng://spaces-ng/out/lib/spaces_messages.service.ts",
    "ng://spaces-ng/out/lib/spaces_base.service.ts",
    "ng://spaces-ng/out/lib/spaces_logging.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\n\nimport { SpacesBaseService } from './lib/spaces_base.service';\nimport { SpacesLoggingService } from './lib/spaces_logging.service';\nimport { SpacesMessagesService } from './lib/spaces_messages.service';\nimport { SpacesParamsResolve } from './lib/spaces_params.resolve';\nimport { SpacesRequestService } from './lib/spaces_request.service';\nimport { SpacesStorageService } from './lib/spaces_storage.service';\nimport { SpacesUtilityService } from './lib/spaces_utilities.service';\n\n// Third part\nimport { BowserModule } from 'ngx-bowser';\nimport { SpacesLandingPageComponent } from './lib/components/spaces-landing-page/spaces-landing-page.component';\n\n@NgModule({\n    declarations: [\n        SpacesLandingPageComponent\n    ],\n    exports: [\n        SpacesLandingPageComponent\n    ],\n    imports: [\n        BowserModule,\n    ],\n    providers: [\n        SpacesBaseService,\n        SpacesLoggingService,\n        SpacesMessagesService,\n        SpacesParamsResolve,\n        SpacesRequestService,\n        SpacesStorageService,\n        SpacesUtilityService,\n    ]\n})\nexport class SpacesModule { }",
    "import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SpacesBaseService } from '../../spaces_base.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'spaces-landing-page',\n  template: `<div *ngIf=\"!done\" class=\"centered\">\n  <h4>Checking parameters</h4>\n</div>\n\n<div *ngIf=\"done && missingParams.length > 0\" class=\"centered\">\n  <h4>You must configure parameters to use this app.</h4>\n</div>\n`,\n  styles: [`.centered{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;margin-top:150px}`]\n})\nexport class SpacesLandingPageComponent implements OnInit {\n\n  missingParams: any[] = [];\n  done = false;\n  constructor(private http: HttpClient, private spacesBaseService: SpacesBaseService, private router: Router) { }\n\n  public ngOnInit() {\n    this.spacesBaseService.initialized.then(() => {\n      const params = this.spacesBaseService.params;\n\n      if (params.develop === 'true') {\n        this.done = true;\n        this.router.navigate(['app']);\n        return;\n      }\n      this.http.get('install.json', {responseType: 'json'}).subscribe(\n        installJson => {\n\n          this.missingParams =\n            installJson['params']\n              .filter(param => param.required)\n              .filter(param => !params[param.name]);\n\n          this.done = true;\n\n          if (this.missingParams.length === 0) {\n            this.router.navigate(['app']);\n          }\n        },\n        err => {\n          console.log(err);\n        });\n    });\n  }\n\n}\n",
    "import {\n    Injectable\n}\nfrom '@angular/core';\n\nimport {\n    SpacesLoggingService\n} from './spaces_logging.service';\n\n@Injectable()\nexport class SpacesUtilityService {\n    constructor(\n        private logging: SpacesLoggingService\n    ) { \n        this.logging.moduleColor('#2878b7', '#fff', 'SpacesUtilityService');\n    }\n\n    public isEmpty(obj): boolean {\n        /**\n         * Check to see if Object is empty\n         * @param obj - The object to check\n         */\n        let isEmpty = true;\n        if (Object.keys(obj).length > 0 && obj.constructor === Object) {\n            isEmpty = false;\n        }\n        return isEmpty;\n    }\n    \n    public findIndex(hay: any[], needle: string): number {\n        /**\n         * Return the index of a string in an array\n         * @param hay - The array continaing the string\n         * @param needle - The string to find\n         */\n        return hay.indexOf(needle);\n    }\n}",
    "import {\n    Injectable\n}\nfrom '@angular/core';\n\nimport {\n    SpacesLoggingService\n} from './spaces_logging.service'\n\n@Injectable()\nexport class SpacesStorageService {\n    /* bcs - app store testing */\n    public storage: any = {};\n\n    constructor(\n        private logging: SpacesLoggingService\n    ) { \n        this.logging.moduleColor('#00008b', '#fff', 'SpacesStorageService');\n    }\n\n    ngOnInit() { /* empty block */ }\n    \n    public create(key, value): void {\n        this.storage[key] = value;\n    }\n    \n    public read(key): any {\n        return this.storage[key];\n    }\n    \n    public delete(key): void {\n        delete this.storage[key];\n    }\n    \n    public update(key, value): void {\n        this.storage[key] = value;\n    }\n}",
    "import { Injectable } from '@angular/core';\nimport {\n    Headers,\n    Http,\n    QueryEncoder,\n    RequestMethod,\n    RequestOptions,\n    Response,\n    URLSearchParams\n}\nfrom '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport { SpacesBaseService } from './spaces_base.service';\nimport { SpacesLoggingService } from './spaces_logging.service';\n\n\nclass SpacesQueryEncoder extends QueryEncoder {\n    constructor(private logging: SpacesLoggingService) {\n        super();\n    }\n\n    encodeKey(k: string): string {\n        this.logging.info('Query Encoder', `Got key ${k}`);\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        this.logging.info('Query Encoder', `Got value ${v}`);\n        return encodeURIComponent(v);\n    }\n}\n\n\n@Injectable()\nexport class SpacesRequestService {\n    /**\n     * Generic Request Module for ThreatConnect API\n     */\n\n    private headers = new Headers();\n    private params = new URLSearchParams('', new SpacesQueryEncoder(this.logging));  // must be above options\n    private options = new RequestOptions({\n        headers: this.headers,\n        method: RequestMethod.Get,\n        params: this.params\n    });\n    private useProxy: boolean;\n    private requestUrl: string;\n\n    constructor(\n        private http: Http,\n        private logging: SpacesLoggingService,\n        private spacesBase: SpacesBaseService\n    ) {\n        this.logging.moduleColor('#2878b7', '#fff', 'SpacesRequestService');\n    }\n    \n    public method(data: string) {\n        /**\n         * Set the HTTP method\n         * @param data - The HTTP Method (DELETE, GET, POST, PUT)\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        switch (data.toUpperCase()) {\n            case 'DELETE':\n                this.options.method = RequestMethod.Delete;\n                break;\n            case 'GET':\n                this.options.method = RequestMethod.Get;\n                break;\n            case 'POST':\n                this.options.method = RequestMethod.Post;\n                break;\n            case 'PUT':\n                this.options.method = RequestMethod.Put;\n                break;\n            default:\n                this.options.method = RequestMethod.Get;\n                break;\n        }\n        return this;\n    }\n    \n    public proxy(data: boolean) {\n        /**\n         * Use secureProxy\n         * @param data - Enable/Disable proxy\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.useProxy = data;\n        return this;\n    }\n\n    public url(data: string) {\n        /**\n         * Set the request URI\n         * @param data - The URL for the request\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.requestUrl = data;\n        return this;\n    }\n\n    //\n    // headers\n    //\n\n    public header(key: string, val: any) {\n        /**\n         * Add a header to the request\n         * @param key - The header key\n         * @param val - The header value\n         * @return The RequestService Object\n         */\n        this.headers.set(key, val);\n        this.logging.debug('key', key);\n        this.logging.debug('val', val);\n        return this;\n    }\n\n    // common headers\n\n    public authorization(data: string) {\n        /**\n         * Helper method to set common authorization header\n         * @param data - The authorization header\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.header('Authorization', data);\n        return this;\n    }\n\n    public contentType(data: string) {\n        /**\n         * Helper method to set common content-type header\n         * @param data - The content-type header\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.header('Content-Type', data);\n        return this;\n    }\n\n    //\n    // body\n    //\n    \n    public body(data: any) {\n        /**\n         * The body for the request\n         * @param data - The body contents\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.options.body = data;\n        return this;\n    }\n\n    //\n    // params\n    //\n\n    public param(key: string, val: any) {\n        /**\n         * Add a query string parameter to the request\n         * @param key - The parameter key\n         * @param val - The parameter value\n         * @return The RequestService Object\n         */\n        this.logging.debug('key', key);\n        this.logging.debug('val', val);\n        this.params.set(key, val);\n        return this;\n    }\n\n    // common paramaeters\n\n    public createActivityLog(data: boolean) {\n        /**\n         * Helper method to set common createActivityLog query string parameter\n         * @param data - The createActivityLog boolean value\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.param('createActivityLog', String(data));\n        return this;\n    }\n\n    public modifiedSince(data: string) {\n        /**\n         * Helper method to set common modifiedSince query string parameter\n         * @param data - The modifiedSince value\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.param('modifiedSince', data);\n        return this;\n    }\n\n    public owner(data: string) {\n        /**\n         * Helper method to set common owner query string parameter\n         * @param data - The owner value\n         * @return The RequestService Object\n         */\n        this.param('owner', data);\n        return this;\n    }\n\n    public resultLimit(data: number) {\n        /**\n         * Helper method to set common resultLimit query string parameter\n         * @param data - The resultLimit value for pagination\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.param('resultLimit', String(data));\n        return this;\n    }\n\n    public resultStart(data: number) {\n        /**\n         * Helper method to set common resultStart query string parameter\n         * @param data - The resultStart value for pagination\n         * @return The RequestService Object\n         */\n        this.logging.debug('data', data);\n        this.param('resultStart', String(data));\n        return this;\n    }\n\n    private proxyUrl() {\n        /**\n         * Proxify the request using secureProxy\n         */\n        let params = new URLSearchParams();\n        params.set('_targetUrl', this.requestUrl);\n        params.appendAll(this.params);\n        this.options.search = params;\n        \n        // not sure why, but this broke after upgrade. replaced with above ^\n        // this.params.replaceAll(params);\n        \n        if (this.spacesBase.tcProxyServer) {\n            this.requestUrl = this.spacesBase.tcProxyServer + '/secureProxy';\n        } else {\n            this.requestUrl = window.location.protocol + '//' +\n                window.location.host + '/secureProxy';\n        }\n        this.logging.debug('this.requestUrl', this.requestUrl);\n    }\n\n    public request(): Observable<Response> {\n        /**\n         * Execute the API request\n         * @param data - The resultStart value for pagination\n         * @return The http Response Object\n         */\n        this.logging.debug('this.requestUrl', this.requestUrl);\n        this.logging.debug('this.options', this.options);\n        this.logging.debug('this.useProxy', this.useProxy);\n\n        this.options.params = this.params;\n        this.options.headers = this.headers;\n\n        if (this.useProxy) { this.proxyUrl(); }\n        return this.http.request(this.requestUrl, this.options)\n            .map(\n                res => {\n                    this.logging.info('res.url', res.url);\n                    this.logging.info('res.status', res.status);\n                    return res;\n                },\n                err => {\n                    this.logging.error('error', err);\n                }\n            );\n    }\n\n    public resetOptions() {\n        /**\n         * Reset request options\n         * @return The RequestService Object\n         */\n        this.logging.info('resetOptions', 'resetOptions');\n        this.headers = new Headers();\n        this.headers.set('Accept', 'application/json');\n        this.params = new URLSearchParams('', new SpacesQueryEncoder(this.logging));\n        this.useProxy = false;\n        this.options = new RequestOptions({\n            headers: this.headers,\n            method: RequestMethod.Get,\n            search: this.params\n        });\n        return this;\n    }\n\n    private handleAjaxError(error: Response) {\n        /**\n         * Execute the API request\n         * @param err - The https Response Object\n         */\n        var errorText = error.text();\n        this.logging.error('Error', 'request to ' + error.url + \n            ' failed with: ' + errorText);\n        return Promise.reject(errorText || error);\n    }\n}",
    "import { Injectable } from '@angular/core';\nimport {\n    Resolve,\n    ActivatedRouteSnapshot }\nfrom '@angular/router';\nimport { SpacesBaseService } from './spaces_base.service'\n\n@Injectable()\nexport class SpacesParamsResolve implements Resolve<any> {\n  \n  constructor(\n      private spacesBase: SpacesBaseService\n  ) {\n      /* Empty Block */\n  }\n  \n  resolve(route: ActivatedRouteSnapshot) {\n      // this.spacesBase.init(route.queryParams);\n      console.log('BCS', this.spacesBase.params)\n      return route.queryParams;\n  }\n}",
    "import { Injectable } from '@angular/core';\nimport { Message } from 'primeng/primeng';\nimport { SpacesLoggingService } from './spaces_logging.service'\n\n@Injectable()\nexport class SpacesMessagesService {\n    public msgs: Message[] = [];\n\n    constructor(\n        private logging: SpacesLoggingService\n    ) { \n        this.logging.moduleColor('#00008b', '#fff', 'SpacesMessagesService');\n    }\n\n    public showSuccess(summary: string, detail: string) {\n        this.showMessage('success', summary, detail);\n    }\n\n    public showInfo(summary: string, detail: string) {\n        this.showMessage('info', summary, detail);\n    }\n\n    public showWarning(summary: string, detail: string) {\n        this.showMessage('warn', summary, detail);\n    }\n\n    public showError(summary: string, detail: string) {\n        this.showMessage('error', summary, detail);\n    }\n\n    private showMessage(severity: string, summary: string, detail: string) {\n        this.clearMessages();\n        this.msgs.push({\n            severity: severity,\n            summary: summary,\n            detail: detail\n        });\n    }\n\n    private clearMessages() {\n        this.msgs = [];\n    }\n}",
    "import { Injectable } from '@angular/core';\nimport {\n    Http,\n    QueryEncoder,\n    RequestMethod,\n    RequestOptions,\n    Response,\n    URLSearchParams\n}\nfrom '@angular/http';\n\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\n\nimport { SpacesLoggingService } from './spaces_logging.service';\n\nclass SpacesQueryEncoder extends QueryEncoder {\n    encodeKey(k: string): string { return encodeURIComponent(k); }\n    encodeValue(v: string): string { return encodeURIComponent(v); }\n}\n\n\n@Injectable()\nexport class SpacesBaseService implements Resolve<any> {\n    private _params: any;\n    private _tcToken: string;\n    private _tcTokenExpires: number;\n    private _initialized: boolean = false;\n    private initPromise: Promise<any>;\n    private initPromiseResolver: () => any;\n    private initPromiseRejector: () => any;\n\n\n    constructor(\n        private http: Http,\n        private logging: SpacesLoggingService,\n    ) {\n        /* Set logging module parameters */\n        this.logging.moduleColor('#2878b7', '#fff', 'SpacesBaseService');\n        this.initPromise = new Promise((resolve, reject) => {\n            this.initPromiseResolver = resolve;\n            this.initPromiseRejector = reject;\n        });\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\n        console.log('resolve');\n\n        console.log('route.queryParamMap.keys', route.queryParamMap.keys);\n        if (!this._initialized) {\n            console.log(`Got params ${route.queryParamMap}`);\n            // this.init(route.queryParamMap);\n            this._params = route.queryParams;\n            console.log('this._params', this._params);\n            console.log('route.queryParamMap', route.queryParamMap);\n            console.log('route.queryParams', route.queryParams);\n            this._tcToken = decodeURIComponent(this._params['tcToken']);  // set for token renew\n            console.log('this._tcToken', this._tcToken);\n            this._tcTokenExpires = this._params['tcTokenExpires'];  // set for token renew\n            this._initialized = true;\n            this.initPromiseResolver();\n        }\n        return this.initPromise;\n    }\n    \n    get initialized(): Promise<boolean> {\n        /**\n         * Promise resolved when Query String Parameters are parsed\n         */\n        return this.initPromise;\n    }\n\n    get params(): any {\n        /**\n         * The entire parameters object from initial load of App\n         */\n        return this._params;\n    }\n\n    public param(name): string {\n        /**\n         * Return the request parameter\n         * @param name The parameter name (key)\n         * @return Decoded URL component\n         */\n         if (this.initialized) {\n            // spaces need to be un-encoded from '+' before decoding\n            let param = this._params[name];\n            if (param !== undefined) {\n                param = decodeURIComponent(param.replace('+', ' '));\n            }\n            return param;\n         } else {\n            this.logging.warn('Service is not intialized.', '');\n            return '';\n         }\n    }\n\n    get tcApiPath(): string {\n        /**\n         * Return the ThreatConnect API Path\n         * @return The ThreatConnect API path passed in the query string parameters\n         */\n        return this.param('tcApiPath');\n    }\n\n    get tcProxyServer(): string {\n        /**\n         * Return the ThreatConnect Proxy Server URL\n         * @return The ThreatConnect Proxy Server URL calculated from tcApiPath\n         */\n        // return this.param('tcApiPath').replace(/\\/api$/, '');\n        /* The proxy server *should* be the same server as is being accessed for the Spaces app. */\n        return '';\n    }\n\n    get tcSpaceElementId(): string {\n        /**\n         * Return the ThreatConnect Spaces Element Id\n         * @return The Spaces Element Id passed in the query string parameters\n         */\n        return this.param('tcSpaceElementId');\n    }\n\n    get tcToken(): string {\n        /**\n         * Return the ThreatConnect API Token\n         * @return The API token passed in the query string parameters\n         */\n\n        /* check if token is expired and if so renew */\n        let buffer = 15;\n        let currentSeconds = (new Date).getTime() / 1000 + buffer;\n        if (this._tcTokenExpires < currentSeconds) {\n            this.tcTokenRenew();\n        } else {\n            return this._tcToken;\n        }\n    }\n\n    private tcTokenRenew(): any {\n        /**\n         * Renew ThreatConnect API Token\n         * @return The new ThreatConnect Token\n         */\n        let params = new URLSearchParams('', new SpacesQueryEncoder());  // must be above options\n        let options = new RequestOptions({\n            method: RequestMethod.Get,\n            search: params\n        });\n        params.set('expiredToken', this._tcToken);\n\n        let url = [\n            this._params['tcApiPath'],\n            'appAuth'\n        ].join('/');\n\n        this.http.request(url, options)\n            .subscribe(\n                res => {\n                    this.logging.debug('res', res);\n                    let response = res.json();\n                    if (response.success === true) {\n                        this._tcToken = response.apiToken;\n                        this._tcTokenExpires = response.apiTokenExpires;\n                    }\n                    return this._tcToken;\n                },\n                err => {\n                    this.logging.error('Token Renewal Error', err);\n                    // bcs - should old token be returned\n                    return this._tcToken;\n                }\n            );\n    }\n\n    private handleAjaxError(error: Response): any {\n        /**\n         * Execute the API request\n         * @param err - The https Response Object\n         */\n        const errorText = error.text();\n        this.logging.error('spaces_base.service: request to ' +  error.url +\n            ' failed with: ', errorText);\n        // console.error('spaces_base.service: request to ' + \n        //     error.url + ' failed with: ' + errorText);\n        return Promise.reject(errorText || error);\n    }\n}",
    "/* Core */\nimport { Injectable } from '@angular/core';\n\n/* Third-Party */\nimport { BowserService } from 'ngx-bowser';\n\n@Injectable()\nexport class SpacesLoggingService {\n    private _logLevel: number = 1;  // info\n    private useColor: boolean = true;\n    private browser: string;\n    // title color defaults\n    private defaultBackground: string = '#fff';\n    private defaultColor: string = '#000';\n    // colors by level\n    private criticalBackground: string = '#F296A1';\n    private criticalColor: string = '#000';\n    private debugBackground: string = '#9EBABA';\n    private debugColor: string = '#FFF';\n    private errorBackground: string = '#F296A1';\n    private errorColor: string = '#FFF';\n    private importantBackground: string = '#FF1493';\n    private importantColor: string = '#000';\n    private infoBackground: string = '#CCC691';\n    private infoColor: string = '#000';\n    private warnBackground: string = '#F5AD89';\n    private warnColor: string = '#000';\n    // colors by method\n    private methodColors: any = {};\n    private moduleColors: any = {};\n    // levels - bcs change to enum if possible\n    private levels: any = {\n        debug: 0,\n        info: 1,\n        warn: 2,\n        error: 3,\n        critical: 4,\n        important: 5\n    }\n\n    constructor(\n        private bowser: BowserService\n    ) { \n        this.browser = this.bowser.bowser.name.toLowerCase();\n        this.info('Browser', this.browser);\n    }\n\n    get logLevel(): string {\n        /**\n         * Return the logging level\n         * @return The logging level (debug, info, warn, critical)\n         */\n        let levels = Object.keys(this.levels);\n        return levels[this._logLevel];\n    }\n    \n    set logLevel(level: string) {\n        /**\n         * Set the logging level\n         * @param The logging level (debug, info, warn, critical)\n         */\n        if (this.levels[level] !== 'null') {\n            this._logLevel = this.levels[level];\n        }\n    }\n    \n    public disableColor(): void {\n        /**\n         * Disable colors in console logging\n         */\n        this.useColor = false;\n    }\n    \n    public criticalColors(\n        background: string,\n        color: string\n    ) {\n        /**\n         * Set color for critical console messages\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.criticalBackground = background;\n        this.criticalColor = color;\n    }\n    \n    public debugColors(\n        background: string,\n        color: string\n    ) {\n        /**\n         * Set color for debug console messages\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.debugBackground = background;\n        this.debugColor = color;\n    }\n    \n    public errorColors(\n        background: string,\n        color: string\n    ) {\n        /**\n         * Set color for error console messages\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.errorBackground = background;\n        this.errorColor = color;\n    }\n    \n    public importantColors(\n        background: string,\n        color: string\n    ) {\n        /**\n         * Set color for info console messages\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.importantBackground = background;\n        this.importantColor = color;\n    }\n    \n    public infoColors(\n        background: string,\n        color: string\n    ) {\n        /**\n         * Set color for log console messages\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.infoBackground = background;\n        this.infoColor = color;\n    }\n    \n    public warnColors(\n        background: string,\n        color: string\n    ) {\n        /**\n         * Set color for warn console messages\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.warnBackground = background;\n        this.warnColor = color;\n    }\n    \n    public methodColor(\n        background: string,\n        color: string,\n        methodName?: string\n    ): void {\n        /**\n         * Set default color for the title on all logs for the current method\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        if (!methodName) {\n            // try to get method name from the stack\n            let methodIndex = this.methodIndex();\n            const error = new Error;\n            let logStack = error.stack ? error.stack.split('\\n') : [];\n            if (logStack.length > 0) {\n                let caller = this.parseLogLine(logStack[methodIndex]);\n                methodName = caller.method;\n            }\n        }\n        if (methodName !== 'null') {\n            this.methodColors[methodName] = {\n                bg: background,\n                color: color\n            };\n        }\n    }\n    \n    public moduleColor(\n        background: string,\n        color: string,\n        moduleName?: string\n    ): void {\n        /**\n         * Set default color for the title on all logs for the current module\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        if (!moduleName) {\n            let methodIndex = this.methodIndex();\n            const error = new Error;\n            let logStack = error.stack ? error.stack.split('\\n') : [];\n            if (logStack.length > 0) {\n                let caller = this.parseLogLine(logStack[methodIndex]);\n                moduleName = caller.module;\n            }\n        }\n        if (moduleName !== 'null') {\n            this.moduleColors[moduleName] = {\n                bg: background,\n                color: color\n            };\n        }\n    }\n    \n    public log(\n        level: string,\n        title: string,\n        msg: any,\n        bg: string = '#fff',\n        color: string = '#000',\n        headerBg: string = '#fff',\n        headerColor: string = '#000',\n        methodIndex: any = undefined\n    ): void {\n        /**\n         * Console Log the message\n         * @param level - The logging level\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         * @param headerBg - The background color in hex format for the header.\n         * @param headerColor - The font color in hex format for the header.\n         * @param methodIndex - The index of the method in the stack\n         */\n        let levelNo = this.levels[level];\n        \n        if (levelNo >= this._logLevel) {\n            const error = new Error;\n            let logStack = error.stack ? error.stack.split('\\n') : [];\n            \n            if (methodIndex === undefined) {\n                methodIndex = this.methodIndex();\n            }\n            // console.log('methodIndex', methodIndex);\n            let caller = this.parseLogLine(logStack[methodIndex]);\n            if (this.browser === 'chrome' &&  caller.module === 'SafeSubscriber') {\n                // best try to handle chrome stack manipulation\n                caller = this.parseLogLine(logStack[logStack.length - 1]);\n            }\n            \n            let c = this.useColor ? ' %c ' : ' ';\n            let header = [\n                level.toUpperCase(),\n                c,\n                this.getHeader(logStack[methodIndex]),\n                c,\n                title,\n                ' '].join(' ');\n            \n            // update colors if module color defined\n            if (this.moduleColors[caller.module]) {\n                bg = this.moduleColors[caller.module].bg;\n                color = this.moduleColors[caller.module].color;\n            }\n            \n            // update colors if method color defined\n            if (this.methodColors[caller.method]) {\n                bg = this.methodColors[caller.method].bg;\n                color = this.methodColors[caller.method].color;\n            }\n            \n            // console log\n            if (this.useColor) {\n                console.log(header, this.css(headerBg, header), this.css(bg, color), msg);\n            } else {\n                console.log(header, msg);\n            }\n        }\n    }\n    \n    private getHeader(\n        logLine: string\n    ): string {\n        /**\n         * Best effor to retrieve module, method, fileName, and line number from error stack.\n         * @param logLine - The line from the Error stack\n         * @param color - Return header with color\n         * @return The module, method, fileName, and line number\n         */\n        let header;\n        let data;\n        let line_data;\n        let module;\n        let method;\n        let fileName;\n        let line;\n        // console.log('logLine', logLine);\n        \n        let divider1;\n        let divider2;\n        \n        switch (this.browser) {\n            case 'chrome':\n                data = logLine.trim().match(/^at\\s(?:new\\s)?(\\w+)(?:\\.)?(\\w+)?\\s/) || [];\n                line_data = logLine.trim().match(/(\\w+\\.\\w+)\\:([0-9]+\\:[0-9]+)/) || [];\n                \n                module = data[1];\n                method = data[2];\n                fileName = line_data[1];\n                line = line_data[2];\n                \n                header = '';\n                divider1 = '';\n                if (module) {\n                    header += module;\n                    divider1 = ':';\n                }\n                if (method) {\n                    header += divider1 + method;\n                }\n                divider2 = '';\n                if (fileName) {\n                    header += ' (' + fileName;\n                    divider2 = ':';\n                }\n                if (line) {\n                    header += divider2 + line + ')';\n                }\n                break;\n            case 'firefox':\n                data = logLine.trim().match(/(\\w+)\\.(?:\\w+)\\.(\\w+)@/) || [];\n                line_data = logLine.trim().match(/(\\w+\\.\\w+)\\:([0-9]+\\:[0-9]+)/) || [];\n                \n                module = data[1];\n                method = data[2];\n                fileName = line_data[1];\n                line = line_data[2];\n                \n                header = '';\n                divider1 = '';\n                if (module) {\n                    header += module;\n                    divider1 = ':';\n                }\n                if (method) {\n                    header += divider1 + method;\n                }\n                divider2 = '';\n                if (fileName) {\n                    header += ' (' + fileName;\n                    divider2 = ':';\n                }\n                if (line) {\n                    header += divider2 + line + ')';\n                }\n                break;\n            case 'safari':\n                data = logLine.trim().match(/^(\\w+)@/) || [];\n                line_data = logLine.trim().match(/(\\w+\\.\\w+)\\:([0-9]+\\:[0-9]+)/) || [];\n                \n                method = data[1];\n                fileName = line_data[1];\n                line = line_data[2];\n                \n                header = '';\n                divider1 = '';\n                if (method) {\n                    header += method;\n                }\n                divider2 = '';\n                if (fileName) {\n                    header += ' (' + fileName;\n                    divider2 = ':';\n                }\n                if (line) {\n                    header += divider2 + line + ')';\n                }\n                break;\n            default:\n                console.warn('Advanced logging is not supported in browser', this.browser);\n        } \n        return header;\n    }\n    \n    private parseLogLine(logLine: string): any {\n        /**\n         * Best effor to retrieve module, method, fileName, and line number from error stack.\n         * @param logLine - The line from the Error stack\n         * @return The module, method, fileName, and line number\n         */\n        let data;\n        let line_data;\n        let module;\n        let method;\n        let fileName;\n        let line;\n        // console.log('logLine', logLine);\n        \n        // TODO - switch this to case statement to define regex so data and line_data are only set once.\n        if (this.browser === 'chrome') {\n            /* best effor at getting module, method, fileName and line number */\n            data = logLine.trim().match(/^at\\s(?:new\\s)?(\\w+)(?:\\.)?(\\w+)?\\s/) || [];\n            line_data = logLine.trim().match(/(\\w+\\.\\w+)\\:([0-9]+\\:[0-9]+)/) || [];\n        } else if (this.browser === 'firefox') {\n            data = logLine.trim().match(/(\\w+)\\.(?:\\w+)\\.(\\w+)@/) || [];\n            line_data = logLine.trim().match(/(\\w+\\.\\w+)\\:([0-9]+\\:[0-9]+)/) || [];\n        } else if (this.browser === 'safari') {\n            data = logLine.trim().match(/^(\\w+)@/) || [];\n            line_data = logLine.trim().match(/(\\w+\\.\\w+)\\:([0-9]+\\:[0-9]+)/) || [];\n        }\n        if (data) {\n            module = data[1] || 'NA';\n            method = data[2] || 'NA';\n        }\n        if (line_data) {\n            fileName = line_data[1] || '?';\n            line = line_data[2] || '?';\n        }\n        return {\n            module: module,\n            method: method,\n            fileName: fileName,\n            line: line\n        }\n    }\n    \n    private methodIndex(): number {\n        /**\n         * Return the method index dependent on the browser.\n         * @return The index number\n         */\n        let index = 3;\n        switch (this.browser) {\n            case 'chrome':\n                index = 3;\n                break;\n            case 'firefox':\n                index = 2;\n                break;\n            case 'safari':\n                index = 2;\n                break;\n            default:\n                console.warn('Advanced logging is not supported in browser', this.browser);\n        } \n        return index;\n    }\n    \n    public critical(\n        title: string,\n        msg: any = '',\n        bg: string = this.defaultBackground,\n        color: string = this.defaultColor\n    ): void {\n        /**\n         * Console Log Critical messages\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.log('critical', title, msg, bg, color, this.criticalBackground, this.criticalColor);\n    }\n\n    public debug(\n        title: string,\n        msg: any = '',\n        bg: string = this.defaultBackground,\n        color: string = this.defaultColor\n    ): void {\n        /**\n         * Console Log Debug messages\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.log('debug', title, msg, bg, color, this.debugBackground, this.debugColor);\n    }\n    \n    public error(\n        title: string,\n        msg: any = '',\n        bg: string = this.defaultBackground,\n        color: string = this.defaultColor\n    ): void {\n        /**\n         * Console Log Error messages\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.log('error', title, msg, bg, color, this.errorBackground, this.errorColor);\n    }\n\n    public info(\n        title: string,\n        msg: any = '',\n        bg: string = this.defaultBackground,\n        color: string = this.defaultColor\n    ): void {\n        /**\n         * Console Log Info messages\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.log('info', title, msg, bg, color, this.infoBackground, this.infoColor);\n    }\n    \n    public important(\n        title: string,\n        msg: any = '',\n        bg: string = this.defaultBackground,\n        color: string = this.defaultColor\n    ): void {\n        /**\n         * Console Log Warn messages\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.log('important', title, msg, bg, color, this.importantBackground, this.importantColor);\n    }\n\n    public warn(\n        title: string,\n        msg: any = '',\n        bg: string = this.defaultBackground,\n        color: string = this.defaultColor\n    ): void {\n        /**\n         * Console Log Warn messages\n         * @param title - The title or description of the data being logged\n         * @param msg - The msg to be logged\n         * @param bg - The background color in hex format.\n         * @param color - The font color in hex format.\n         */\n        this.log('warn', title, msg, bg, color, this.warnBackground, this.warnColor);\n    }\n\n    private css(\n        background:string,\n        color: string\n    ): string {\n        /**\n         * Format the CSS for console colors\n         * @param background - The background color in hex format.\n         * @param color - The font color in hex format.\n         * @return The formatted CSS string for console colors\n         */\n        return [\n            'background: ',\n            background + '; ',\n            'color: ',\n            color + ';'\n        ].join(' ');\n    }\n}"
  ],
  "names": [
    "SpacesQueryEncoder"
  ],
  "mappings": "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"
}
